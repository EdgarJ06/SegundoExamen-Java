/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author eroda
 */
public class ConversorDeDivisas extends javax.swing.JFrame {
    String TipoMonedaIngreso = "GTQ";
    String TipoMonedaConvertir = "GTQ";

    /**
     * Creates new form ConversorDeDivisas
     */
    public ConversorDeDivisas() {
        initComponents();
        
        this.setTitle("Conversor De Divisas");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtIngreso = new javax.swing.JTextField();
        cboMonedaIn = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        cboMonedaCon = new javax.swing.JComboBox<>();
        btnConvertir = new javax.swing.JButton();
        lbResultado = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel1.setText(" INGRESE IMPORTE:");

        txtIngreso.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtIngreso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIngresoActionPerformed(evt);
            }
        });

        cboMonedaIn.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        cboMonedaIn.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "GTQ", "USD", "EUR", "MX" }));
        cboMonedaIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboMonedaInActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel2.setText("SELECCIONE LA MONEDA A CONVERTIR");

        cboMonedaCon.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        cboMonedaCon.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "GTQ", "USD", "EUR", "MX" }));
        cboMonedaCon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboMonedaConActionPerformed(evt);
            }
        });

        btnConvertir.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnConvertir.setText("CONVERTIR");
        btnConvertir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConvertirActionPerformed(evt);
            }
        });

        lbResultado.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(113, 113, 113)
                        .addComponent(btnConvertir, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(cboMonedaCon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cboMonedaIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lbResultado, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboMonedaIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cboMonedaCon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addComponent(btnConvertir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addComponent(lbResultado, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtIngresoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIngresoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIngresoActionPerformed

    private void btnConvertirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConvertirActionPerformed
        // TODO add your handling code here:
        double resultado = 0;
        double IngresoMoneda = Double.parseDouble(txtIngreso.getText());
        switch(TipoMonedaIngreso){
            case "GTQ" -> {
                if(TipoMonedaConvertir.equals("USD"))
                {
                   resultado = (IngresoMoneda * 0.13);
                   lbResultado.setText("Resultado: "+Double.toString(resultado)+" USD");
                }
                else if(TipoMonedaConvertir.equals("EUR"))
                {
                    resultado = (IngresoMoneda * 0.12);
                    lbResultado.setText("Resultado: "+Double.toString(resultado)+" EUR");
                }
                else if(TipoMonedaConvertir.equals("MX"))
                {
                   resultado = (IngresoMoneda * 2.67); 
                   lbResultado.setText("Resultado: "+Double.toString(resultado)+" MX");
                }
                else
                {
                    resultado = IngresoMoneda;
                    lbResultado.setText("Resultado: "+Double.toString(resultado)+" GTQ");
                }
            }
            case "USD" -> {
                if(TipoMonedaConvertir.equals("GTQ"))
                {
                    resultado = (IngresoMoneda * 7.67);
                    lbResultado.setText("Resultado: "+Double.toString(resultado)+" GTQ");
                }
                else if(TipoMonedaConvertir.equals("EUR"))
                {
                    resultado = (IngresoMoneda * 0.95);
                    lbResultado.setText("Resultado: "+Double.toString(resultado)+" EUR");
                }
                else if(TipoMonedaConvertir.equals("MX"))
                {
                    resultado = (IngresoMoneda * 20.43);
                    lbResultado.setText("Resultado: "+Double.toString(resultado)+" MX");
                }
                else 
                {
                    resultado = IngresoMoneda;
                    lbResultado.setText("Resultado: "+Double.toString(resultado)+" USD");
                }
            }
            case "EUR" -> {
                if(TipoMonedaConvertir.equals("GTQ"))
                {
                    resultado = (IngresoMoneda * 8.07);
                    lbResultado.setText("Resultado: "+Double.toString(resultado)+" GTQ");
                }
                else if(TipoMonedaConvertir.equals("USD"))
                {
                    resultado = (IngresoMoneda * 1.05);
                    lbResultado.setText("Resultado: "+Double.toString(resultado)+" USD");
                }
                else if(TipoMonedaConvertir.equals("MX"))
                {
                    resultado = (IngresoMoneda * 21.50);
                    lbResultado.setText("Resultado: "+Double.toString(resultado)+" MX");
                }
                else 
                {
                    resultado = IngresoMoneda;
                    lbResultado.setText("Resultado: "+Double.toString(resultado)+" EUR");
                }
            }
            case "MX" -> {
                if(TipoMonedaConvertir.equals("GTQ"))
                {
                    resultado = (IngresoMoneda * 0.38);
                    lbResultado.setText("Resultado: "+Double.toString(resultado)+" GTQ");
                }
                else if(TipoMonedaConvertir.equals("USD"))
                {
                    resultado = (IngresoMoneda * 0.049);
                    lbResultado.setText("Resultado: "+Double.toString(resultado)+" USD");
                }
                else if(TipoMonedaConvertir.equals("EUR"))
                {
                    resultado = (IngresoMoneda * 0.047);
                    lbResultado.setText("Resultado: "+Double.toString(resultado)+" EUR");
                }
                else 
                {
                    resultado = IngresoMoneda;
                    lbResultado.setText("Resultado: "+Double.toString(resultado)+" MX");
                }
            }
        }
    }//GEN-LAST:event_btnConvertirActionPerformed

    private void cboMonedaInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboMonedaInActionPerformed
        // TODO add your handling code here:
        TipoMonedaIngreso = cboMonedaIn.getSelectedItem().toString();
    }//GEN-LAST:event_cboMonedaInActionPerformed

    private void cboMonedaConActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboMonedaConActionPerformed
        // TODO add your handling code here:
        TipoMonedaConvertir = cboMonedaCon.getSelectedItem().toString();
    }//GEN-LAST:event_cboMonedaConActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConversorDeDivisas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConversorDeDivisas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConversorDeDivisas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConversorDeDivisas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConversorDeDivisas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConvertir;
    private javax.swing.JComboBox<String> cboMonedaCon;
    private javax.swing.JComboBox<String> cboMonedaIn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lbResultado;
    private javax.swing.JTextField txtIngreso;
    // End of variables declaration//GEN-END:variables
}
